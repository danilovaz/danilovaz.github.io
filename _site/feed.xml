<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Danilo Vaz</title>
    <atom:link href="http://danilovaz.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <link>http://danilovaz.github.io/</link>
    <description>Oi, eu sou Danilo Vaz. Um desenvolvedor caipira de Cunha que mora em São José dos Campos. Também trabalho em uma empresa maravilhosa que tem mesa de bilhar.</description>
    <pubDate>Wed, 04 Feb 2015 00:01:36 -0200</pubDate>
    
      <item>
        <title>Criando repositório Git</title>
        <link>http://danilovaz.github.io/2015/02/03/criand-repositorio-git.html</link>
        <guid isPermaLink="true">http://danilovaz.github.io/2015/02/03/criand-repositorio-git.html</guid>
        <description>&lt;p&gt;No artigo anterior eu ensinei como &lt;a href=&quot;http://danilovaz.github.io/2015/02/02/instalando-git-no-windows.html&quot;&gt;instalar Git no Windows&lt;/a&gt;. Agora vou ensinar como criar um repositório local e enviá-lo para o Github e começar a fazer o controle de versionamento do seu projeto.&lt;/p&gt;

&lt;h2 id=&quot;criando-o-repositório-local&quot;&gt;Criando o repositório local&lt;/h2&gt;

&lt;p&gt;Para criar um repositório local, acesse o terminal e crie a pasta que vai conter o seu projeto.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;Documents/User/Projetos

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkdir meu-primeiro-repositorio

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;meu-primeiro-repositorio
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pronto, agora que criou a pasta do seu projeto e está dentro dele, vamos rodar o comando &lt;code&gt;git init&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esse comando vai criar em nosso projeto uma pasta invisível chamada .git e criar uma branch para controlar nossos arquivos. Mas até o momento não temos nenhum arquivo sendo controlado, vamos então criar o arquivo README.md que será uma espécial de manual dentro do seu repositório&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;touch README.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Legal, criamos o arquivo. Agora temos que verificar se esse arquivo está sendo apontado pelo Git como um arquivo que precisa ser incluído em seu Stage para que possa ser commitado.
Para isso, rode o comando&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esse comando lista todos os arquivos locais de nosso projeto que: são novos, sofreram modificações ou foram deletados.&lt;/p&gt;

&lt;p&gt;Veja que o README.md apareceu como &lt;code&gt;untracked file&lt;/code&gt;, ou seja, esse arquivo não está sendo controlado pelo Git.&lt;/p&gt;

&lt;p&gt;Existem duas formas aqui para que possamos incluir o README.md ao Stage:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add -A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esse comando adiciona à Stage todos os arquivos novos ou que sofreram modificações. Esse comando requer atenção quando você está trabalhando em um repositório com várias pessoas, pois, pode ser que você coloque na trilha de Stage arquivos que só deviriam ter em sua máquina local. Por isso fique atento e sempre rode &lt;code&gt;git status&lt;/code&gt; para ter certeza dos arquivos que devem ser enviados.&lt;/p&gt;

&lt;p&gt;A outra maneira de adicionar arquivos à Stage é adicionando uma por uma &amp;quot;na mão&amp;quot;. Dependendo das alterações é trabalhoso, porém mais para frente vou ensinar um comando que facilita a vida. Mas por hora, como vamos adicionar um arquivo só rode&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add README.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pronto, adicionamos o README.md à Stage. Para verificar se está tudo certo, rode o &lt;code&gt;git status&lt;/code&gt; agora deve ser exibido &lt;code&gt;new file&lt;/code&gt; antes do nome do README.md&lt;/p&gt;

&lt;p&gt;Estamos quase no fim. Agora vamos commitar as alterações no repositório para que depois possamos enviar ao servidor. O processo de commit basicamente pega todos os arquivos que você adicionou à Stage e envia para o HEAD que aponta para o último commit do repositório remoto.
Vamos commitar.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;Adiciona README.md&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Agora vou mostrar um passo que não precisa ser feito sempre, apenas quando criamos o repositório por linha de comando via &lt;code&gt;git init&lt;/code&gt;. Quando criamos o repositório direto no Github esse passo pode ser pulado.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote add origin https://github.com/username/repo-name.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;E por fim, mas não menos importante vamos enviar para o repositório remoto o nosso commit.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;WOW! Parabéns, você criou seu primeiro commit :smiley:&lt;/p&gt;

&lt;p&gt;Agora é só você acessar o Github e visualizar seu primeiro repositório!&lt;/p&gt;

&lt;p&gt;Fique ligado nos próximos posts.&lt;/p&gt;

&lt;p&gt;Sem mais delongas, inté!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Mostre-me teu código que te digo quem tu és.&amp;quot;
- Danilo Vaz&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Tue, 03 Feb 2015 00:00:00 -0200</pubDate>
      </item>
    
      <item>
        <title>Instalando Git no Windows</title>
        <link>http://danilovaz.github.io/2015/02/02/instalando-git-no-windows.html</link>
        <guid isPermaLink="true">http://danilovaz.github.io/2015/02/02/instalando-git-no-windows.html</guid>
        <description>&lt;p&gt;Antes que me crucifiquem, esse post tem o intuito nobre de ajudar um amigo a migrar do desenvolvimento &amp;quot;desktop&amp;quot; pra desenvolvimento web, que é onde ele tem mais interesse e por isso vou dar um help no que eu puder passar do pouco que sei.&lt;/p&gt;

&lt;p&gt;Enquanto ele não providencia um Linux ou um Mac :p vamos de &lt;del&gt;Ruindows&lt;/del&gt; Windows mesmo.&lt;/p&gt;

&lt;h2 id=&quot;instalando-git-no-windows&quot;&gt;Instalando Git no Windows&lt;/h2&gt;

&lt;p&gt;Para a surpresa geral da nação, instalar o Git no Windows é muito fácil. Basta acessar o site &lt;a href=&quot;http://msysgit.github.io/&quot;&gt;MsysGit&lt;/a&gt; baixar o Git SCM, instalar o &lt;code&gt;.exe&lt;/code&gt; e ser feliz (até onde é possível com Windows).&lt;/p&gt;

&lt;h2 id=&quot;usando-git-no-windows&quot;&gt;Usando Git no Windows&lt;/h2&gt;

&lt;p&gt;Ao instalar o Git, você terá duas formas de utilizá-lo: Git GUI e Git BASH.&lt;/p&gt;

&lt;p&gt;O Git GUI nada mais é do que uma interface gráfica &amp;quot;bonitinha&amp;quot; onde tudo que você precisa fazer é clicar e clicar e clicar.&lt;/p&gt;

&lt;p&gt;Particularmente, eu prefiro utilizar o prompt de comando (terminal, bash, whatever). Considero ser mais prático e rápido. Mas gosto é igual, você sabe, cada um tem o seu.&lt;/p&gt;

&lt;p&gt;Por isso para esse post, onde o intuito é nortear um caminho para meu amigo aprender de uma maneira mais correta o que a web tem de melhor, vou utilizar exemplos partindo do BASH.&lt;/p&gt;

&lt;h2 id=&quot;configurando-git&quot;&gt;Configurando Git&lt;/h2&gt;

&lt;p&gt;A primeira coisa a se fazer após instalar o Git, é configurar sua identidade para que o Git possa identificar você e suas ações/requisições.&lt;/p&gt;

&lt;p&gt;Para isso, abra o Git BASH e defina seu username&amp;quot;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git config --global user.name &amp;quot;José das Couves&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Após configurar seu username, vamos configurar o seu e-mail (deve ser o mesmo que você se cadastrou no &lt;a href=&quot;http://github.com&quot;&gt;Github&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git config --global user.email josecouves@couves.com.br
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pronto, seu Git está configurado. Mas por via das dúvidas rode o seguinte comando para verificar se suas informações estão corretas:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git config --list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Por hoje é só isso, foi um post curto e simples apenas para mostrar como instalar Git no Windows e utilizá-lo pelo prompt de comando.&lt;/p&gt;

&lt;p&gt;Esse é o primeiro post de uma sério sobre Git, no qual vou ensinar do básico até algumas dicas mais avançadas para quem ainda não conhece Git.&lt;/p&gt;

&lt;p&gt;Sem mais delongas, inté!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Mostre-me teu código que te digo quem tu és.&amp;quot;
- Danilo Vaz&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 02 Feb 2015 00:00:00 -0200</pubDate>
      </item>
    
      <item>
        <title>Série de posts sobre Slush</title>
        <link>http://danilovaz.github.io/2015/02/01/serie-de-posts-sobre-slush.html</link>
        <guid isPermaLink="true">http://danilovaz.github.io/2015/02/01/serie-de-posts-sobre-slush.html</guid>
        <description>&lt;p&gt;Generators já não é assunto novo no meio de desenvolvimento, principalmente para quem constantemente está em busca de aperfeiçoar seu workflow.&lt;/p&gt;

&lt;p&gt;Um generator bastante conhecido da galera é o &lt;a href=&quot;http://yeoman.io/&quot;&gt;Yeoman&lt;/a&gt;, existem vários artigos em português falando a respeito dele. Mas existem muito poucos falando sobre o &lt;a href=&quot;http://slushjs.github.io/&quot;&gt;Slush&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Obviamente quantidade não é qualidade, mas às vezes com tão pouco artigos você não encontra exatamente o que está procurado.&lt;/p&gt;

&lt;p&gt;Pensando nisso, elaborei uma série de posts dividida em 3 partes onde vou abordar os seguintes tópicos:&lt;/p&gt;

&lt;h4 id=&quot;conheça-o-slush&quot;&gt;Conheça o Slush&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;O que é Slush?&lt;/li&gt;
&lt;li&gt;Por que utilizar o Slush e não o Yeoman?&lt;/li&gt;
&lt;li&gt;Quando utilizar o Slush?&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;slush,-primeiros-passos&quot;&gt;Slush, primeiros passos&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Instalando Slush&lt;/li&gt;
&lt;li&gt;Criando seu primeiro scaffolding com Slush&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;criando-seu-próprio-generator-com-slush&quot;&gt;Criando seu próprio generator com Slush&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Criando seu próprio generator&lt;/li&gt;
&lt;li&gt;Publicando seu generator&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A primeira parte é mais filosófica. Onde pretendo explicar o que o Slush se propõe a fazer, a diferença entre ele e o Yeoman e quando eu acho válido utilizar o Slush.&lt;/p&gt;

&lt;p&gt;Se você ainda não conhece sobre nem um e nem outro, não se preocupe. A primeira parte sobre Slush é justamente para situar tanto quem nunca viu um generator quanto para quem só viu Yeoman.&lt;/p&gt;

&lt;p&gt;Acompanhe o blog e não perca a primeira parte sobre Slush :)&lt;/p&gt;

&lt;p&gt;Sem mais delongas, inté!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Mostre-me teu código que te digo quem tu és.&amp;quot;
- Danilo Vaz&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 01 Feb 2015 00:00:00 -0200</pubDate>
      </item>
    
      <item>
        <title>Lançamento do blog e #1postpordia</title>
        <link>http://danilovaz.github.io/2015/01/31/lancamento-do-blog-e-1postpordia.html</link>
        <guid isPermaLink="true">http://danilovaz.github.io/2015/01/31/lancamento-do-blog-e-1postpordia.html</guid>
        <description>&lt;p&gt;Esse é o primeiro post do meu blog (yeeeeeaaaah!). Finalmente criei coragem (ou vergonha na cara?) de criar meu blog para compartilhar minhas divagações webnéticas :p e me estimular a me atualizar cada vez mais. Afinal de contas, aprende-se muito mais quando se ensina.&lt;/p&gt;

&lt;p&gt;Para não deixar a peteca cair, vou abraçar a ideia do &lt;a href=&quot;https://github.com/fdaciuk&quot;&gt;Fernando Daciuk&lt;/a&gt; e &lt;a href=&quot;https://github.com/willianjusten&quot;&gt;Willian Justen&lt;/a&gt; de criar &lt;a href=&quot;http://willianjusten.com.br/um-post-por-dia/&quot;&gt;#1postpordia&lt;/a&gt;. Não é uma tarefa fácil, mas vamos ver se consigo manter o ritmo.&lt;/p&gt;

&lt;p&gt;A maioria dos assuntos que vou abordar aqui, vou retirar de uma outra grande iniciativa: &lt;a href=&quot;https://github.com/LFeh/poste-mais&quot;&gt;Poste mais&lt;/a&gt;. Criado pelo &lt;a href=&quot;https://github.com/LFeh&quot;&gt;Luiz Felipe Tartarotti Fialho&lt;/a&gt; através das &lt;a href=&quot;https://github.com/LFeh/poste-mais/issues&quot;&gt;issues&lt;/a&gt; a comunidade dá ideias de assuntos a serem abordados em posts. É super simples e dá um tremendo incentivo. Confira o &lt;a href=&quot;https://github.com/LFeh/poste-mais&quot;&gt;repositório&lt;/a&gt; e colabore indicando novos assuntos e/ou escreva seus posts.&lt;/p&gt;

&lt;p&gt;Mas caso queira me indicar assuntos diretamente, abra uma issue &lt;a href=&quot;https://github.com/danilovaz/danilovaz.github.io/issues&quot;&gt;aqui&lt;/a&gt; e com o título do assunto e o que gostaria que fosse abordado.&lt;/p&gt;

&lt;p&gt;Não sei bem se esse post aqui conta rs, mas por via das dúvidas começo postando amanhã algo relevante. Tenho plena consciência que ao longo do tempo vou ter que ir aperfeiçoando meus posts.&lt;/p&gt;

&lt;p&gt;Não tenho obrigação de acertar, mas tenho a obrigação de corrigir para não ficar disseminando informações errôneas que podem atrapalhar e prejudicar quem quer que seja; por isso estou aberto à sugestões e críticas sobre o blog e posts que eu for lançando.&lt;/p&gt;

&lt;p&gt;Sinta-se livre para me enviar um tweet &lt;a href=&quot;https://twitter.com/_danilovaz&quot;&gt;aqui&lt;/a&gt; ou abra uma issue &lt;a href=&quot;https://github.com/danilovaz/danilovaz.github.io/issues&quot;&gt;aqui&lt;/a&gt; no seguinte formato: Erro Post {nome do post} e na mensagem explique o que encontrou e qual a melhor maneira de corrigir.&lt;/p&gt;

&lt;p&gt;Isso é tudo pessoal. Não vou ficar me apresentando pois o importante nesse blog não sou eu, mas os posts. Mas caso queira me conhecer, além do &lt;a href=&quot;https://twitter.com/_danilovaz/&quot;&gt;Twitter&lt;/a&gt; e &lt;a href=&quot;https://github.com/danilovaz&quot;&gt;Github&lt;/a&gt;, você pode me encontrar no &lt;a href=&quot;http://br.linkedin.com/in/danilovaz&quot;&gt;Linkedin&lt;/a&gt; e no &lt;a href=&quot;https://www.facebook.com/vazdanilo&quot;&gt;Facebook&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sem mais delongas, inté!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Mostre-me teu código que te digo quem tu és.&amp;quot;
- Danilo Vaz&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 31 Jan 2015 00:00:00 -0200</pubDate>
      </item>
    
  </channel>
</rss>
